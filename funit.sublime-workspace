{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"he",
				"header4"
			],
			[
				"head",
				"header5"
			],
			[
				"n",
				"n"
			],
			[
				"sub",
				"subroutine"
			],
			[
				"s",
				"subroutine"
			],
			[
				"re",
				"return"
			],
			[
				"pro",
				"program"
			],
			[
				"a",
				"arg2"
			],
			[
				"w",
				"write"
			],
			[
				"wr",
				"write_to_target"
			],
			[
				"cut",
				"cut_out"
			],
			[
				"cu",
				"cut_out"
			]
		]
	},
	"buffers":
	[
		{
			"file": "scripts/executer.py",
			"settings":
			{
				"buffer_size": 585,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# -*- coding: utf-8 -*-  \nimport os\n\nclass Compiling(object):\n	\n	def __init__(self, arg1, arg2):\n		self.arg1 = arg1\n		self.arg2 = arg2\n		self.target = open('makefile', 'w')\n\n\n\n	def __del__(self):\n		self.target.close()\n\n\n	def write_to_makefile(self):\n		self.target.write ('FC = gfortran\\n')\n		self.target.write ('FLAGS = -g\\n')\n		self.target.write ('\\n')\n		self.target.write ('PRO_DIR = /Users/shiqi/Projects/funit\\n')\n		self.target.write ('SRC_DIR = $(PRO_DIR)/src\\n')\n		self.target.write ('TESTS_DIR = $(PRO_DIR)/tests\\n')\n		self.target.write ('\\n')\n		self.target.write ('OBJ = *.o\\n')\n		self.target.write ('MOD = *.mod\\n')\n		self.target.write ('\\n')\n		self.target.write ('a.exe: %s.f90 %s.o assert_class.o\\n' % (self.arg1, self.arg2))\n		self.target.write ('\\t$(FC) $(FLAGS) $(OBJ) %s.f90 -o a.exe\\n' % self.arg1)\n		self.target.write ('\\n')\n		self.target.write ('%s.o: $(SRC_DIR)/%s.f90\\n' % (self.arg2, self.arg2))\n		self.target.write ('\\t$(FC) -c $(SRC_DIR)/%s.f90\\n' % self.arg2)\n		self.target.write ('\\n')\n		self.target.write ('assert_class.o: $(SRC_DIR)/assert_class.f90\\n')\n		self.target.write ('\\t$(FC) -c $(SRC_DIR)/assert_class.f90\\n')\n		self.target.write ('\\n')\n		self.target.write ('clean:\\n')\n		self.target.write ('\\trm -f $(OBJ) $(MOD)\\n')\n\n\n\n	def compile_makefile(self):\n		os.system('make')\n		os.system('make clean')\n\n\n\n# arg1 = 'main'\n# arg2 = 'test_class'\n# c = Compiling(arg1, arg2)\n# c.write_to_makefile()\n# c.compile_makefile()",
			"file": "scripts/compiler.py",
			"file_size": 1447,
			"file_write_time": 1404218787000000,
			"settings":
			{
				"buffer_size": 1447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scripts/TestRunner.f90",
			"settings":
			{
				"buffer_size": 258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/circle_class.fun",
			"settings":
			{
				"buffer_size": 714,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/TestRunner.f90",
			"settings":
			{
				"buffer_size": 258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/test_class.f90",
			"settings":
			{
				"buffer_size": 707,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 147.0,
		"selected_items":
		[
			[
				"smf",
				"Set Syntax: MinimalFortran"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pre",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"smd",
				"Set Syntax: Markdown"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"sfor",
				"Set Syntax: MinimalFortran"
			],
			[
				"sfo",
				"Set Syntax: MinimalFortran"
			],
			[
				"ssmd",
				"Set Syntax: Markdown"
			],
			[
				"ssmin",
				"Set Syntax: MinimalFortran"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"s f",
				"Set Syntax: Batch File"
			],
			[
				"pre gi",
				"Markdown Preview: Github Flavored Markdown: Preview in Browser"
			],
			[
				"md",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"p re",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"terin",
				"Preferences: Terminal Settings – User"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"preview",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"is ta l l",
				"Package Control: Install Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Add Channel"
			],
			[
				"markd",
				"Set Syntax: Markdown"
			],
			[
				"pa",
				"Project: Add Folder"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 647.0
	},
	"console":
	{
		"height": 233.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": true,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/shiqi/Projects/funit/scripts/render.py",
		"/Users/shiqi/Projects/funit/scripts/render1.py",
		"/Users/shiqi/Projects/funit/scripts/TestRunner.f90",
		"/Users/shiqi/tt.f03",
		"/Users/shiqi/Documents/fortran.mdown",
		"/Users/shiqi/Projects/funit/src/assert_class.f90",
		"/Users/shiqi/Projects/funit/src/circle_class.f90",
		"/Users/shiqi/area_class.fun",
		"/Users/shiqi/Projects/funit/scripts/makefile",
		"/Users/shiqi/area_class_fun.f90",
		"/Users/shiqi/Projects/funit/tests/circle_class.fun",
		"/Users/shiqi/Projects/funit/.gitignore",
		"/Users/shiqi/Projects/funit/circle_class.fun",
		"/Users/shiqi/Projects/funit/sample/basic_os.py",
		"/Users/shiqi/Projects/funit/src/run.py",
		"/Users/shiqi/Projects/funit/assert_class.f90",
		"/Users/shiqi/Projects/funit/src/render.py",
		"/Users/shiqi/Projects/funit/src/compile.py",
		"/Users/shiqi/Projects/funit/src/makefile",
		"/Users/shiqi/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/shiqi/Projects/funit/src/filename",
		"/Users/shiqi/Projects/fortran/parameters_class.f90",
		"/Users/shiqi/Projects/fortran/circle_class_fun.f90",
		"/Users/shiqi/Projects/fortran/parameters_class.fun.f",
		"/Users/shiqi/Projects/fortran/docs/funit_doc.pdf",
		"/Users/shiqi/Projects/fortran/docs/funit_doc.md",
		"/Users/shiqi/Projects/fortran/circle_class.f90",
		"/Users/shiqi/Projects/fortran/funit_doc.md",
		"/Users/shiqi/Projects/fortran/fortran.sublime-project",
		"/Users/shiqi/Documents/untitled.mdown",
		"/Users/shiqi/Documents/github gollum 安装小记.md",
		"/Users/shiqi/Library/Application Support/Sublime Text 2/Packages/User/Terminal.sublime-settings",
		"/Users/shiqi/Documents/Mac OS X Terminal Colors - Stack Overflow.pdf"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"setup_",
			"write_to_target",
			"yes",
			"test",
			"program",
			"dp",
			"	\n",
			"circle",
			"use",
			"none",
			"assert_real_equal",
			"d",
			"assert_equal_within",
			"raw_text",
			"arg1",
			"SRC",
			"rend",
			"print",
			"'''",
			" '",
			"render",
			")(",
			"cut_out",
			"end",
			"raw_text",
			"split2",
			"split1",
			"change2",
			"change1",
			"split",
			"assert_equal",
			"set",
			"Logic",
			"Mentor",
			"</tt>",
			"<tt>",
			"software",
			"]",
			"[",
			"==",
			"gollum",
			"Gollum",
			"gollum",
			"Github",
			"github",
			"</tt>",
			"<tt>",
			"tt",
			"#",
			"=",
			"github gollum 安装小记",
			";",
			","
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "scripts/executer.py",
					"settings":
					{
						"buffer_size": 585,
						"regions":
						{
						},
						"selection":
						[
							[
								128,
								128
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "scripts/compiler.py",
					"settings":
					{
						"buffer_size": 1447,
						"regions":
						{
						},
						"selection":
						[
							[
								943,
								945
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "scripts/TestRunner.f90",
					"settings":
					{
						"buffer_size": 258,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "tests/circle_class.fun",
					"settings":
					{
						"buffer_size": 714,
						"regions":
						{
						},
						"selection":
						[
							[
								75,
								75
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/TestRunner.f90",
					"settings":
					{
						"buffer_size": 258,
						"regions":
						{
						},
						"selection":
						[
							[
								258,
								258
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/test_class.f90",
					"settings":
					{
						"buffer_size": 707,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/MinimalFortran/MinimalFortran.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.markdown":
	{
		"height": 136.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"set",
				"Search: Libraries » funit (0.11.1) » Index » File:"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 242.0,
	"status_bar_visible": true
}
